public class HelloJava {                        //这是我用eclipse IDE开发的第一个java程序
	public static void main(String[] args) {
		System.out.println("    *");
		System.out.println("   ***");
		System.out.println("  *****");
		System.out.println(" *******");
		System.out.println("*********");
	}

}

public class Test1 {                            //第二个java程序
	public static void main(String[] args) 
	{
		for(int i=0;i<=5;i++) {
			System.out.println("这时的i值为 "+i);
		}
	}

}

public class Person {                           //定义类
	public static void main(String[] args) {
	    Person zhang = new Person(); // 创建第一个实例
	    zhang.name = "张子同";
	    String isMan = zhang.issex() ? "女" : "男";
	    System.out.println("姓名：" + zhang.name + "性别：" + isMan + "年龄：" + zhang.age);
	    Person li = new Person(); // 创建第二个实例
	    li.name = "李子文";
	    li.sex = true;
	    li.age = 15;
	    String isWoman = li.issex() ? "女" : "男";
	    System.out.println("姓名：" + li.name + "性别：" + isWoman + "年龄：" + li.age);
	}
		
	 String name;
	 private int age;
	 private boolean sex;
	 public boolean issex() {
		    return sex;
		}
		public void setSex(boolean sex) {
		    this.sex = sex;
		}
	 
	}

import java.util.Scanner;                       //打印杨辉三角
public class YHtriangle {
	public static int num(int x, int y) {
	    if (y == 1 || y == x) {
	        return 1;
	    }
	    int c = num(x - 1, y - 1) + num(x - 1, y);
	    return c;
	}
	public static void calculate(int row) {
	    for (int i = 1; i <= row; i++) {
	        for (int j = 1; j <= row - i; j++) {
	            System.out.print(" ");
	        }
	        for (int j = 1; j <= i; j++) { // 打印空格后面的字符, 从第1 列开始往后打印
	            System.out.print(num(i, j) + " ");
	        }
	        System.out.println();
	    }
	}
	public static void main(String[] args) {
		System.out.print("打印杨辉三角形的行数：");
		Scanner scanner = new Scanner(System.in);
	    int row = scanner.nextInt();
	    calculate(row);
	}

}

public class StransformI {			//字符串转化为整型
	public static void main(String[] args) {
	    String str ="123";
	    int n = 0;
	    n = Integer.parseInt(str);
	    System.out.println("Integer.parseInt(str) : " + n);

	    n = 0;
	    n = Integer.valueOf(str).intValue();
	    System.out.println("Integer.parseInt(str) : " + n);
	}

}

public class ItransformS {			//整型转化为字符串型
	public static void main(String[] args) {
	    int num = 10;

	    
	    num = 10;
	    String str = String.valueOf(num);
	    System.out.println("str:" + str);

	    
	    num = 10;
	    String str2 = Integer.toString(num);
	    System.out.println("str2:" + str2);

	    
	    String str3 = num + "";
	    System.out.println("str3:" + str3);
	}

}

public class ConnectChar {			//字符串的拼接方法一
	public static void main(String[] args) {
	    int[] no = new int[] { 501, 101, 204, 102, 334 }; 
	    String[] names = new String[] { "张城", "刘丽丽", "李国旺", "孟红霞", "贺宁" }; 
	    String[] classes = new String[] { "数学", "语文", "数学", "英语", "英语" }; 
	    System.out.println("本次考试学生信息如下：");
	    
	    for (int i = 0; i < no.length; i++) {
	        System.out.println("学号：" + no[i] + "|姓名：" + names[i] + "|课程：" + classes[i] + "|班级：" + "初二（三）班");
	    }
	}

}

public class ConcatChar {			//字符串的拼接方法二
	public static void main(String[] args) {
	    String info = "三国演义、";
	    info = info.concat("西游记、");
	    info = info.concat("水浒传、");
	    info = info.concat("红楼梦");
	    System.out.println(info);
	    String cn = "中国";
	    System.out.println(cn.concat("北京").concat("海淀区").concat("人民公园"));
	}

public class CharIntFloat {			//字符串、整型、浮点型的拼接
	public static void main(String[] args) {
	    String book = "三国演义"; 
	    int price = 59; 
	    float readtime = 2.5f; 
	    System.out.println("我买了一本图书，名字是：" + book + "\n价格是：" + price + "元" +"\n我每天阅读" + readtime + "小时");
	}

}

import java.util.Scanner;			//管理员密码设置
public class InformationM {
	public static void main(String[] args) {
	    String sys = "学生信息管理";
	    System.out.println("欢迎进入《" + sys + "》系统");
	    System.out.println("请设置一个管理员密码：");
	    
	    Scanner input = new Scanner(System.in);
	    String pass = input.next();
	    
	    int length = pass.length();
	    if (length > 6 & length < 12) {
	        System.out.println("密码长度符合规定。");
	        System.out.println("已生效，请牢记密码：" + pass);
	    } else if (length >= 12) {
	        System.out.println("密码过长。");
	    } else {
	        System.out.println("密码过短。");
	    }
	    
	    
	}

}

public class SubstringNews {			//截取新闻标题
	public static void main(String[] args) {
	    // 定义存储新闻标题的数组
	    String[] news = new String[] { "如何快速掌握Java", "听老王剖析Java中的运算符", "学习Java的十大忠告", "你所不知道的java网络编程技巧大全", "Java面试题大全" }; 
	    String title = "*************新闻列表*************";
	    System.out.println(title.substring(10, 20));
	    System.out.println("----------------------------------------------");
	    
	    for (int i = 0; i < news.length; i++) {
	        // 判断数组元素的长度是否大于10，如果大于，则截取，否则全部显示
	        if (news[i].length() > 10) {
	            System.out.println(news[i].substring(0, 10) + "…");
	        } else {
	            System.out.println(news[i]);
	        }
	    }
	}

}

import java.util.Scanner;
public class EqualsIgnoreCase {			//会员系统
	public static void main(String[] args) {
	    String sys = "学生信息管理";
	    System.out.println("欢迎进入《" + sys + "》系统");
	    System.out.println("请输入管理员名称：");
	    Scanner input = new Scanner(System.in);
	    String name = input.next(); // 获取用户输入的名称
	    System.out.println("请输入管理员密码：");
	    input = new Scanner(System.in);
	    String pass = input.next(); // 获取用户输入的密码
	    // 比较用户名与密码，注意此处忽略大小写
	    if (name.equalsIgnoreCase("admin") && pass.equalsIgnoreCase("somboy")) { // 验证
	        System.out.println("登录成功。");
	    } else {
	        System.out.println("登录失败。");
	    }
	}

}

import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class ProveNumber {			//正则表达式验证电话号码
	public static void main(String[] args) {
        //编写代码
    
	String regex = "0\\d{2,3}[-]?\\d{7,8}|0\\d{2,3}\\s?\\d{7,8}|13[0-9]\\d{8}|15[1089]\\d{8}";
	String answer = "Y";
	do {
	    System.out.print("请留下您的电话号码：");
	    Scanner scan = new Scanner(System.in);
	    String phone = scan.next();    // 接收用户在控制台输入的电话号码
	    Pattern pattern = Pattern.compile(regex);    // 编译正则表达式
	    Matcher matcher = pattern.matcher(phone);    // 创建给定输入模式的匹配器
	    boolean bool = matcher.matches();
	    if(bool) { // 如果验证通过
	        System.out.println("输入的电话号码格式正确。");
	    } else {
	        System.out.println("输入的电话号码无效，格式不正确。");
	    }
	    System.out.print("是否继续输入？（Y/N 或者 y/n）");
	    answer=scan.next();
	}while(answer.equalsIgnoreCase("Y"));
	System.out.println("注册结束。");
	}
}

import java.lang.StringBuffer;
import java.util.Scanner;
public class SFappend {				//输出必修课程
	public static void main(String[] args) {
		
        StringBuffer sys = new StringBuffer("校内课程管理");
        System.out.println("欢迎进入《"+sys+"》系统");
        // 声明课程名称字符串
        StringBuffer courseName = new StringBuffer();
        System.out.println("请录入本期的五门必修课名称：");
        for (int i = 0;i < 5;i++) {
        Scanner input = new Scanner(System.in);
        // 循环接收控制台输入的字符串
        String name = "";
        
            name = input.next();
            courseName.append(name+"\t");
            if(i == 4) {
                System.out.println("录入完毕!");
            }
        }
        System.out.println("本学期的必修课程有：\n"+courseName);
	
  }

}

import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class FindGroup {			//从大段的字符串中找出电话号码(使用正则表达式可以实现简单的网络爬虫)
	public static void main(String[] args) {
        // 使用字符串模拟从网络上得到的网页源码
        String str = "我想找一套适合自己的JAVA教程，尽快联系我13500006666" + "交朋友，电话号码是13611125565" + "出售二手电脑，联系方式15899903312";
        // 创建一个Pattern对象，并用它建立一个Matcher对象
        // 该正则表达式只抓取13X和15X段的手机号
        // 实际要抓取哪些电话号码，只要修改正则表达式即可
        Matcher m = Pattern.compile("((13\\d)|(15\\d))\\d{8}").matcher(str);
        // 将所有符合正则表达式的子串（电话号码）全部输出
        while (m.find()) {
            System.out.println(m.group());
        }
    }

}

import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class StartEnd {				//start()和end()方法主要用于子串在目标字符串中的位置
	 public static void main(String[] args) {
	        
	        String regStr = "Java is very easy!";
	        System.out.println("目标字符串是：" + regStr);
	        Matcher m = Pattern.compile("\\w+").matcher(regStr);
	        while (m.find()) {
	            System.out.println(m.group() + "子串的起始位置：" + m.start() + "，其结束位置：" + m.end()+"。");
	        }
	    }

}

import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class MatchesTest {			//matches方法要求整个字符串和pattern完全匹配时才返回true
	public static void main(String[] args) {
        String[] mails = { "kongyeeku@163.com", "kongyeeku@gmail.com", "ligang@crazyit.org", "wawa@abc.xx" };
        String mailRegEx = "\\w{3,20}@\\w+\\.(com|org|cn|net|gov)";
        Pattern mailPattern = Pattern.compile(mailRegEx);
        Matcher matcher = null;
        for (String mail : mails) {
            if (matcher == null) {
                matcher = mailPattern.matcher(mail);
            } else {
                matcher.reset(mail);
            }
            String result = mail + (matcher.matches() ? "是" : "不是") + "一个有效的邮件地址！";
            System.out.println(result);
        }
    }

}

import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class ReplaceTest {			//利用正则表达式对目标字符串进行替换
	public static void main(String[] args) {
        String[] msgs = { "Java has regular expressions in 1.4", "regular expressions now expressing in Java",
                "Java represses oracular expressions" };
        Pattern p = Pattern.compile("re\\w*");
        Matcher matcher = null;
        for (int i = 0; i < msgs.length; i++) {
            if (matcher == null) {
                matcher = p.matcher(msgs[i]);
            } else {
                matcher.reset(msgs[i]);
            }
            System.out.println(matcher.replaceAll("哈哈 "));
        }
    }

}

import java.util.Arrays;
public class StringReg {			//使用String类提供的正则表达式功能来进行替换和分割
	public static void main(String[] args) {
        String[] msgs = { "Java has regular expressions in 1.4", "regular expressions now expressing in Java",
                "Java represses oracular expressions" };
        for (String msg : msgs) {
            System.out.println(msg.replaceFirst("re\\w*", "哈哈 "));
            System.out.println(Arrays.toString(msg.split(" ")));
        }
    }

}

public class Test01 {			       //求最大值、最小值和绝对值
	 public static void main(String[] args) {
	        System.out.println("10 和 20 的较大值：" + Math.max(10, 20));
	        System.out.println("15.6 和 15 的较小值：" + Math.min(15.6, 15));
	        System.out.println("-12 的绝对值：" + Math.abs(-12));
	    }

}

import java.util.Scanner;		       //求整运算
public class Test02 {
	public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("请输入一个数字： ");
        double num = input.nextDouble();
        System.out.println("大于或等于 "+ num +" 的最小整数：" + Math.ceil(num));
        System.out.println("小于或等于 "+ num +" 的最大整数：" + Math.floor(num));
        System.out.println("将 "+ num +" 加上 0.5 之后最接近的整数：" + Math.round(num));
        System.out.println("最接近 "+num+" 的整数：" + Math.rint(num));
    }

}

public class Test03 {			       //三角函数运算
	public static void main(String[] args) {
        System.out.println("90 度的正弦值：" + Math.sin(Math.PI/2));
        System.out.println("0 度的余弦值：" + Math.cos(0));
        System.out.println("1 的反正切值：" + Math.atan(1));
        System.out.println("120 度的弧度值：" + Math.toRadians(120.0));
	}
 
}
