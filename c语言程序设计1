#include <stdio.h>				//1、打印倒三角形九九乘法表；
int main()						
{	int i,j;
	for (i=1;i<10;i++)
	{	for (j=i;j<10;j++)
		{	printf ("%d*%d=%2d ",i,j,i*j);
		}
		putchar ('\n');
		for (j=1;j<=i;j++)
		{	printf ("       ");
		}
	}
	return 0;
}

#include <stdio.h>				//2、用迭代法求一个数的平方根；
float abs(float n)
{	  if(n>=0)
	  return n;
	  else
	  return -n;
}
int main()
{	float a,x,t;
	printf("请输入一个正数:");
	scanf("%f",&a);
	for(x=a/2;abs(t-x)>1E-5;)
	{	t=x;
		x=(x+a/x)/2;
	}
	printf("数%.2f的平方根为%f\n",a,t);
	return 0;
}
		
#include <stdio.h>				//3、求运动员的平均得分；			
int main()
{	float score[10];
	int i,j,k;
	printf("请输入10名裁判的打分:"); 
	for(i=0;i<10;i++)
	{	scanf("%f",&score[i]);
	}
	float max=0,min=score[0],sum=0;
	for(i=0;i<10;i++)
	{	if(score[i]>max)
		{max=score[i]; j=i; }
		if(score[i]<min)
		{min=score[i]; k=i; }
	}
	score[j]=0;
	score[k]=0;
	for(i=0;i<10;i++)
	{	sum+=score[i];
	}
	printf("该运动员的平均得分为:%.2f\n",sum/8);
}

#include <stdio.h> 				//4、一个数如果恰好等于它的因子之和（包括1，但不包括这个数本身），这个数就称为“完数”。例：
int main()					   28=1+2+4+7+14，编写一个程序，找出1000以内的所有完数，要求输出格式为：28 it's force
{	int x,i,sum=0;				   are 1,2,4,7,14。
	for(x=1;x<=1000;x++)
	{	for(i=1;i<x;i++)
		{	if(x%i==0)
			{	
				sum+=i;
			}
			else
			continue;
		}
		if(sum==x)
		{ printf("%d it's factors are",x); 
		  for(i=1;i<x;i++)
		  {	if(x%i==0)
			printf("%d,",i);
			else 
			continue;
		  }
		  putchar('\n');
		  sum=0;
		  continue;
		}
		else
		{ sum=0;  continue;}
	}
	return 0;
}

#define N 10		
#include <stdio.h> 				//5、开灯问题。有编号为1~n的n个学生和n湛灯，1号学生将所有的灯关掉，2号学生将编号为2的倍数的灯都打
int main()					 开，3号学生将编号为3的倍数的灯作相反处理（该灯若是打开的，则关掉；该灯若是关掉的，则打开），以后
{	int light[N]={1,1,1,1,1,1,1,1,1,1};	 的学生都将自己编号的倍数的灯作相反处理。问经过n个学生操作后，哪些灯是打开的？
	int i,j;
	for(i=0;i<N;i++)
	{	
		light[i]=0;
	}
	for(i=1;i<N;i+=2)
	{
		light[i]=1;
	}
	for(i=2;i<N;i+=3)
	{	if(light[i]=0)
		light[i]=1;
		else
		light[i]=0;
	}
	for(i=3;i<N;i++)
	{	for(j=i;j<N;j+=(i+1))
		{	if(light[j]=0)
			light[j]=1;
			else
			light[j]=0;
		}
	}
	printf("灯是开着的编号有:");
	for(i=0;i<N;i++)
	{	if(light[i]=1)
	printf("%d ",++i);
		else
		continue;
	}
	return 0;
}

#include <stdio.h>				//6、游戏问题。有12名小朋友手拉手站成一个圆圈，从第一名小朋友开始报数，报到7的那名小朋友退到圈外，
int main()					 然后他的下一位重新报1.这样继续下去，直到最后只剩下一名小朋友，问这名小朋友原来站在什么位置上？
{	int i,children[12],number=0,sum=1;
	for(i=0;i<12;i++)		//  对12个小朋友初始化 
	{
		children[i]=0;		//	 假定都为零表示站在圆圈内，编号 
	}
	i=0;
	do{
		if(children[i]==1)		// 	此函数用来跳过退到圈外的小朋友 
		{ sum--; }
		if(sum==7)				//	计数 
		{ children[i]=1; number++; sum=1; }		// number用来表示从1数到7的次数，用1表示退到圈外的小朋友，sum归1，继续计数 
		sum++;    			//	循环 
		i++;			
		if(i==11)			//	此函数用来使小朋友形成圆圈 
		{ i=0; }
	}while(number<11);
	printf("最后剩下的小朋友原来的位置:");
	for(i=0;i<12;i++)
	{	if(children[i]==0)
		printf("%d",i+1);
	}
	return 0;
}					
						 

#define N 10
#include <stdio.h>				//7、假定有一个一维数组中的数按从小到大有序排列，现要求从键盘上输入一个数，并插入到该数组中，使得
int main()					 该数组中的数仍然按从小到大有序排列。
{	float number[N+1]={1,2,3,4,5,6,7,8,9,10},x;
	printf("请输入一个数:");
	scanf("%f",&x);
	number[N]=x;
	int i,j,t;
	for(i=0;i<N+1;i++)
	{	for(j=N-1;j>=i;j--)
		{	if(number[j]>number[j+1])
			{ t=number[j]; number[j]=number[j+1]; number[j+1]=t; }
		}
	}
	printf("排序后为:");
	for(i=0;i<N+1;i++)
	{
		printf("%.1f ",number[i]);
	}
	return 0;
}

#include <stdio.h>				//8、编写一个程序，输出n阶杨辉三角形，下面是一个n=5的杨辉三角形
int main()						1
{	int i,n,j;					1   1
	printf("请输入一个数:");			   	1   2   1
	scanf("%d",&n);					1   3   3   1
	for(i=0;i<n;i++)				1   4   6   4   1
	{	for(j=i;j<n;j++)
		{
			printf(" ");
		}
		if(i==0)
		{ printf("%d\n",i+1); continue; }
		else if(i==1)
		{ printf("%d %d\n",i,i); continue; } 
		else if(i==2)
		{printf("1 %d 1\n",i); continue; }
		else if(i==3)
		{ printf("1 %d %d 1\n",i,i); continue; }
		else if(i==4)
		{ printf("1 %d %d %d 1\n",i,(i-1)*2,i); continue; }
		else
		continue;
	}
	return 0;
}

#include <stdio.h> 				//9、假定有10个候选人，他们分别用编号1~10表示，有20个人参加投票，每个投票人只能把票投给一个候选人，
int main()					 输入每个投票人投给某个候选人的编号，编程统计每个候选人的得票数，并按照得票数从高到低输出每个候选人
{	int a[10],number,max=0,i,j=0,t;		 人的编号和得票数。
	for(i=0;i<10;i++)
	{
		a[i]=0;
	}
	printf("请输入候选人的编号:");
	for(i=0;i<20;i++)
	{	scanf("%d",&number);
		switch (number)
		{	case 1 : a[0]++;  break;
			case 2 : a[1]++;  break;
			case 3 : a[2]++;  break;
			case 4 : a[3]++;  break;
			case 5 : a[4]++;  break;
			case 6 : a[5]++;  break;
			case 7 : a[6]++;  break;
			case 8 : a[7]++;  break;
			case 9 : a[8]++;  break;
			case 10 : a[9]++;  break;
		}
	}
	printf("候选人编号  得票数\n");
	do{
	for(i=0;i<10;i++)
	{	if(max<=a[i])
		{ max=a[i];  t=i; continue; }
	}
	printf("    %d        %d\n",t+1,max);
	max=0;
	a[t]=0;
	j++;
	}while(j<10);
	return 0;
}

#define N 3					//10、编写一个程序，找出二维数组每一行中最小的元素组成一个一维数组
#include <stdio.h> 
int main()
{	float a[N][N],b[N];
	int i,j;
	printf("请输入一个%d*%d的矩阵:",N,N);
	for(i=0;i<N;i++)
	{	for(j=0;j<N;j++)
		{
			scanf("%f",&a[i][j]);
		}
	}
	for(i=0;i<N;i++)
	{	for(j=0;j<N;j++)
		{
		    b[i]=a[i][j];
		}
	}
	for(i=0;i<N;i++)
	{	for(j=0;j<N;j++)
		{	if(b[i]>a[i][j])
			b[i]=a[i][j];
		}
	}
	for(i=0;i<N;i++)
	{
		printf("%.1f ",b[i]);
	}
	return 0;
}

#define N 3
#include <stdio.h> 				//11、找出二维数组中的鞍点，即该位置上的元素是该行中的最大值，也是该列中的最小值。二维数组也可能
int main()					  没有鞍点
{	float a[N][N],b[N],c[N];
	int i,j,t[N];
	printf("请输入一个%d*%d的矩阵:",N,N);
	for(i=0;i<N;i++)
	{	for(j=0;j<N;j++)
		{
			scanf("%f",&a[i][j]);
		}
	}
	for(i=0;i<N;i++)
	{
		b[i]=0;
	}
	for(i=0;i<N;i++)
	{	for(j=0;j<N;j++)
		{	if(b[i]<a[i][j])
			{ b[i]=a[i][j];  t[i]=j; }
		}
	}
	for(j=0;j<N;j++)
	{	for(i=0;i<N;i++)
		{	
			c[j]=a[i][t[j]];
		}
	}
	for(j=0;j<N;j++)
	{	for(i=0;i<N;i++)
		{	if(c[j]>a[i][t[j]])
			c[j]=a[i][t[j]];
		}
	}
	printf("鞍点为:");
	for(i=0;i<N;i++)
	{	if(b[i]==c[i])
		printf("%.1f",b[i]);
	}
	return 0;
}

#include <stdio.h>				//12、生成n*n的螺旋方阵，例示：
int main()					  1  2  3  4  5
{	printf("生成一个n*n的螺旋矩阵\n");	  16 17 18 19 6
	printf("请输入n:");		       15 24 25 20 7 
	int n,m=1,round=1;                        14 23 22 21 8
	scanf("%d",&n);				  13 12 11 10 9
	int a[n][n],i,j;
	for(i=0;i<n;i++)
	{
		a[0][i]=m++;
	}
	for(i=n-1;i>=n/2;i--)
	{	for(j=round;j<=i;j++)
		{ a[j][i]=m++;  }
		
		for(j=i;j>=round;j--)
		{ a[i][j-1]=m++; }
		
		for(j=i;j>round;j--)
		{ a[j-1][round-1]=m++; }
		
		for(j=round;j<i;j++)
		{ a[round][j]=m++;	}
		round++;
	}
	for(i=0;i<n;i++)
	{	for(j=0;j<n;j++)
		{
			printf("%2d ",a[i][j]);
		}
		putchar('\n');
	}
	return 0;  
}
